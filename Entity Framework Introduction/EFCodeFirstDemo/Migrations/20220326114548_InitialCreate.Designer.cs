// <auto-generated />
using EFCodeFirstDemo.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EFCodeFirstDemo.Migrations
{
    [DbContext(typeof(SolarContext))]
    [Migration("20220326114548_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.15")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EFCodeFirstDemo.Data.Models.Planet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("SolarSystemId")
                        .HasColumnType("int");

                    b.Property<int>("SunId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SolarSystemId");

                    b.HasIndex("SunId");

                    b.ToTable("Planets");
                });

            modelBuilder.Entity("EFCodeFirstDemo.Data.Models.SolarSystem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("SolarSystems");
                });

            modelBuilder.Entity("EFCodeFirstDemo.Data.Models.Star", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("SolarSystemId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SolarSystemId");

                    b.ToTable("Stars");
                });

            modelBuilder.Entity("EFCodeFirstDemo.Data.Models.Planet", b =>
                {
                    b.HasOne("EFCodeFirstDemo.Data.Models.SolarSystem", "SolarSystem")
                        .WithMany()
                        .HasForeignKey("SolarSystemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EFCodeFirstDemo.Data.Models.Star", "Sun")
                        .WithMany()
                        .HasForeignKey("SunId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SolarSystem");

                    b.Navigation("Sun");
                });

            modelBuilder.Entity("EFCodeFirstDemo.Data.Models.Star", b =>
                {
                    b.HasOne("EFCodeFirstDemo.Data.Models.SolarSystem", "SolarSystem")
                        .WithMany()
                        .HasForeignKey("SolarSystemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SolarSystem");
                });
#pragma warning restore 612, 618
        }
    }
}
